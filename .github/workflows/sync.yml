name: Google Sheets to JS API

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Download data and create JS API
      run: |
        mkdir -p api
        
        curl -L "https://docs.google.com/spreadsheets/d/1JUmhcit0KzPKppTJQGVxsWCuXCpYhmbL4KXCgTpdTyY/export?format=csv&gid=0" -o raw_data.csv
        
        head -n 1001 raw_data.csv > data.csv
        
        node -e "
        const fs = require('fs');
        const csvContent = fs.readFileSync('data.csv', 'utf8');
        const lines = csvContent.trim().split('\n');
        const headers = lines[0].split(',').map(h => h.replace(/\"/g, ''));
        const data = [];
        
        for (let i = 1; i < lines.length; i++) {
          const values = lines[i].split(',').map(v => v.replace(/\"/g, ''));
          const record = {};
          headers.forEach((header, index) => {
            const value = values[index] || '';
            if (value && !isNaN(value) && !isNaN(parseFloat(value))) {
              record[header] = parseFloat(value);
            } else {
              record[header] = value;
            }
          });
          data.push(record);
        }
        
        const jsContent = \`// Store API Data - Auto-generated
// Last updated: \${new Date().toISOString()}

window.STORE_DATA = {
  lastUpdate: '\${new Date().toISOString()}',
  recordCount: \${data.length},
  data: \${JSON.stringify(data, null, 2)}
};\`;
        
        fs.writeFileSync('api/data.js', jsContent);
        "

    - name: Commit and push changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git add data.csv api/data.js
        if ! git diff --quiet --cached; then
          git commit -m "Auto-update data and JS API $(date)"
          git push
        fi
